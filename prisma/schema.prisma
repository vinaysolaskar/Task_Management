// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   @default("user") // user/admin
  tasks     Task[]
  userlogs      UserLog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  fileUrl     String?  
  fileName    String?  
  status      String   @default("pending")
  tasklogs      TaskLog[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserLog {
  id          Int      @id @default(autoincrement())
  userId      Int
  requestType String
  createdAt   DateTime @default(now())
  response    String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TaskLog {
  id          Int      @id @default(autoincrement())
  taskId      Int
  requestType String
  createdAt   DateTime @default(now())
  response    String
  task        Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
}

